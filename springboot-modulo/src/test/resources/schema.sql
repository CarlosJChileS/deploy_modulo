CREATE TABLE IF NOT EXISTS usuarios (
  id BIGINT PRIMARY KEY,
  nombre VARCHAR(255),
  correo VARCHAR(255),
  password VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS parametros_ideales (
  id BIGINT PRIMARY KEY,
  claridad_ideal DOUBLE,
  velocidad_ideal DOUBLE,
  pausas_ideales DOUBLE,
  otros_parametros VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS grabacion (
  id BIGINT PRIMARY KEY
);

CREATE TABLE IF NOT EXISTS calificaciones (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  grabacion_id BIGINT,
  usuario_id BIGINT,
  puntaje_global DOUBLE PRECISION,
  observacion_global VARCHAR(255),
  tipo_calificacion VARCHAR(50),
  fecha TIMESTAMP,
  parametros_id BIGINT,
  CONSTRAINT calificaciones_usuario_id_fkey FOREIGN KEY (usuario_id) REFERENCES usuarios(id),
  CONSTRAINT calificaciones_parametros_id_fkey FOREIGN KEY (parametros_id) REFERENCES parametros_ideales(id),
  CONSTRAINT calificaciones_grabacion_id_fkey FOREIGN KEY (grabacion_id) REFERENCES grabacion(id)
);

CREATE TABLE IF NOT EXISTS criterios_evaluacion (
  id BIGINT PRIMARY KEY,
  nombre VARCHAR(100),
  descripcion VARCHAR(255),
  peso DOUBLE PRECISION
);

CREATE TABLE IF NOT EXISTS detalle_calificacion (
  id BIGINT PRIMARY KEY,
  calificacion_id BIGINT,
  criterio_id BIGINT,
  slide_id INTEGER,
  puntaje DOUBLE PRECISION,
  comentario VARCHAR(255),
  fragmento_audio_id BIGINT,
  CONSTRAINT detalle_calificacion_calificacion_id_fkey FOREIGN KEY (calificacion_id) REFERENCES calificaciones(id),
  CONSTRAINT detalle_calificacion_criterio_id_fkey FOREIGN KEY (criterio_id) REFERENCES criterios_evaluacion(id)
);

CREATE TABLE IF NOT EXISTS feedback_calificacion (
  id BIGINT PRIMARY KEY,
  calificacion_id BIGINT,
  observacion VARCHAR(255),
  fecha TIMESTAMP,
  autor VARCHAR(100),
  CONSTRAINT feedback_calificacion_calificacion_id_fkey FOREIGN KEY (calificacion_id) REFERENCES calificaciones(id)
);
